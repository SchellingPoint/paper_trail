services:
  db:
    image: postgres:16.4-alpine
    environment:
      PGPASSWORD: $PGPASSWORD
      PGUSER: $PGUSER
      POSTGRES_USER: $PGUSER
      POSTGRES_PASSWORD: $PGPASSWORD
      # PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    networks:
      - backend_network
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER}"]
      interval: 1s
      timeout: 5s
      retries: 10
  paper_trail:
    image: $REGISTRY/$REPO_OWNER/$DOCKER_TAG
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - $REGISTRY/$REPO_OWNER/$DOCKER_TAG
    environment:
      PGUSER: $PGUSER
      PGPASSWORD: $PGPASSWORD
      PGPORT: 5432
      PGHOST: db
      MIX_ENV: $MIX_ENV
    tty: true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_network
    command: ["/bin/sh", "./setup-database.sh"]

# volumes:
#   pgdata:
networks:
  backend_network:
    driver: bridge
